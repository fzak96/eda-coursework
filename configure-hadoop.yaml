- name: Install and Configure Hadoop
  hosts: all
  vars:
    hadoop_home_path: /home/almalinux/hadoop-3.4.0
    private_key_name: cluster_id_rsa
  tasks:
    - name: Downloading Hadoop
      ansible.builtin.get_url:
        url: https://downloads.apache.org/hadoop/common/hadoop-3.4.0/hadoop-3.4.0.tar.gz
        dest: /home/almalinux/hadoop.tar.gz
    - name: Unpack Hadoop tgz file
      ansible.builtin.unarchive:
        src: /home/almalinux/hadoop.tar.gz
        dest: /home/almalinux/
        remote_src: true
    - name: Setup Hadoop environment
      ansible.builtin.blockinfile:
        path: "{{ hadoop_home_path }}/etc/hadoop/hadoop-env.sh"
        block: |
          export JAVA_HOME=/usr/lib/jvm/jre-openjdk
          export HDFS_NAMENODE_USER=almalinux
          export HDFS_DATANODE_USER=almalinux
          export HDFS_SECONDARYNAMENODE_USER=almalinux
          export YARN_RESOURCEMANAGER_USER=almalinux
          export YARN_NODEMANAGER_USER=almalinux
          export HADOOP_HOME={{ hadoop_home_path }}
          export HADOOP_INSTALL=$HADOOP_HOME
          export YARN_HOME=$HADOOP_HOME
          export HADOOP_CONF_DIR=$HADOOP_HOME/etc/hadoop
          export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native
          export HADOOP_OPTS="-Djava.library.path=$HADOOP_HOME/lib/native"
          export HADOOP_SSH_OPTS="-i /home/almalinux/.ssh/{{private_key_name}}"
        state: present

    - name: Setup shell environment
      ansible.builtin.blockinfile:
        path: /home/almalinux/.bashrc
        block: |
          export HADOOP_HOME={{ hadoop_home_path }}
          export JAVA_HOME=/usr/lib/jvm/jre-openjdk
          export PATH=$PATH:${HADOOP_HOME}/bin:${HADOOP_HOME}/sbin:$HOME/spark-3.5.3-bin-hadoop3-scala2.13/bin
          export PATH=$PATH:${JAVA_HOME}/bin
        state: present

    - name: config core-site.xml
      ansible.builtin.blockinfile:
        path: "{{ hadoop_home_path }}/etc/hadoop/core-site.xml"
        insertafter: <configuration>
        marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
        block: |
          <property>
              <name>fs.default.name</name>
              <value>hdfs://mgmtnode:9000/</value>
          </property>
          <property>
            <name>fs.default.FS</name>
            <value>hdfs://mgmtnode:9000/</value>
          </property>
        state: present

    - name: config hdfs-site.xml
      ansible.builtin.blockinfile:
        path: "{{ hadoop_home_path }}/etc/hadoop/hdfs-site.xml"
        insertafter: <configuration>
        marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
        block: |
          <property>
            <name>dfs.namenode.name.dir</name>
              <value>/home/almalinux/hadoop/data/nameNode</value>
          </property>
          <property>
            <name>dfs.datanode.data.dir</name>
            <value>/home/almalinux/hadoop/data/dataNode</value>
          </property>
          <property>
            <name>dfs.namenode.http-address</name>
            <value>mgmtnode:50070</value>
          </property>
          <property>
            <name>dfs.replication</name>
            <value>1</value>
          </property>
        state: present

    - name: configure yarn
      ansible.builtin.blockinfile:
        path: "{{ hadoop_home_path }}/etc/hadoop/yarn-site.xml"
        insertafter: <configuration>
        marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
        block: |
          <property>
            <name>yarn.resourcemanager.resource-tracker.address</name>
            <value>mgmtnode:8025</value>
          </property>
          <property>
            <name>yarn.resourcemanager.scheduler.address</name>
            <value>mgmtnode:8035</value>
          </property>
          <property>
            <name>yarn.resourcemanager.address</name>
            <value>mgmtnode:8050</value>
          </property>
          <property>
            <name>yarn.log-aggregation-enable</name>
            <value>true</value>
          </property>
        state: present

      
